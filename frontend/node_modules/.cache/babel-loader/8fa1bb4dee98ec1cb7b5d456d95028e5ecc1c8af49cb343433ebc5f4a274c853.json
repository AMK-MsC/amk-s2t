{"ast":null,"code":"import * as dotenv from 'dotenv';\ndotenv.config();\nconst HuggingFaceAPI = {\n  initializeModel: async () => {\n    console.log(\"start model\");\n    try {\n      const response = await fetch(\"https://api-inference.huggingface.co/models/openai/whisper-large-v2\", {\n        headers: {\n          Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n        },\n        method: \"POST\",\n        body: \"start\"\n      });\n      if (response.status == 503) {\n        const result = await response.json();\n        return result;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\nexport { HuggingFaceAPI };","map":{"version":3,"names":["dotenv","config","HuggingFaceAPI","initializeModel","console","log","response","fetch","headers","Authorization","process","env","ACCESS_TOKEN","method","body","status","result","json","error"],"sources":["/home/oyvind/Documents/amkS2T/amks2t/src/api.ts"],"sourcesContent":["import * as dotenv from 'dotenv';\n\ndotenv.config();\n\nconst HuggingFaceAPI = {\n    initializeModel: async () => {\n        console.log(\"start model\")\n        try {\n            const response = await fetch(\"https://api-inference.huggingface.co/models/openai/whisper-large-v2\",\n                {\n                    headers: { Authorization: `Bearer ${process.env.ACCESS_TOKEN}` },\n                    method: \"POST\",\n                    body: \"start\",\n                }\n            )\n            if (response.status == 503){\n                const result = await response.json();\n                return result;\n            }\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport { HuggingFaceAPI };"],"mappings":"AAAA,OAAO,KAAKA,MAAM,MAAM,QAAQ;AAEhCA,MAAM,CAACC,MAAM,EAAE;AAEf,MAAMC,cAAc,GAAG;EACnBC,eAAe,EAAE,YAAY;IACzBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qEAAqE,EAC9F;QACIC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASC,OAAO,CAACC,GAAG,CAACC,YAAa;QAAE,CAAC;QAChEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;MACV,CAAC,CACJ;MACD,IAAIR,QAAQ,CAACS,MAAM,IAAI,GAAG,EAAC;QACvB,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;QACpC,OAAOD,MAAM;MACjB;IACJ,CAAC,CACD,OAAOE,KAAK,EAAE;MACVd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;IACtB;EACJ;AACJ,CAAC;AAED,SAAShB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}