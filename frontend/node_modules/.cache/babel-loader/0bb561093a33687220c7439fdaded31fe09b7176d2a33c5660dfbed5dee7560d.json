{"ast":null,"code":"var _jsxFileName = \"/home/oyvind/Documents/amkS2T/amks2t/src/AudioUpload.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Center, Text } from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport HuggingFaceAPI from \"./api\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUpload = () => {\n  _s();\n  const [countDown, setCountDown] = useState(0);\n  const [audio, setAudio] = useState();\n  useEffect(() => {\n    const initializeModel = async () => {\n      const response = await HuggingFaceAPI.initializeModel();\n      setCountDown(parseInt(response.estimated_time));\n      console.log(countDown);\n    };\n    void initializeModel();\n  }, []);\n\n  // Timer that counts down from countDown to 0 and updates the state every second\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (countDown > 0) {\n        setCountDown(countDown - 1);\n      }\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [countDown]);\n\n  // Upload audio from local file system\n  const audioRef = useRef(null);\n  const uploadAudio = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      setAudio(file);\n      const objectUrl = URL.createObjectURL(file);\n      console.log(objectUrl);\n      if (audioRef.current) {\n        audioRef.current.src = objectUrl;\n        audioRef.current.play();\n      }\n    }\n  };\n  const transcribeAudio = async file => {\n    if (!file) {\n      return;\n    }\n    const response = await HuggingFaceAPI.transcribeAudio(file);\n    console.log(response);\n  };\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: countDown === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Model initialized. Please upload an audio file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: uploadAudio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => transcribeAudio(audio),\n          children: \"Transcribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Initializing model. Please wait \", countDown, \" seconds.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioUpload, \"KHwMDmTW/hXL1WqOYWdR7OM0oX8=\");\n_c = AudioUpload;\nexport default AudioUpload;\nvar _c;\n$RefreshReg$(_c, \"AudioUpload\");","map":{"version":3,"names":["Box","Button","Center","Text","useEffect","useRef","useState","HuggingFaceAPI","AudioUpload","countDown","setCountDown","audio","setAudio","initializeModel","response","parseInt","estimated_time","console","log","timer","setTimeout","clearTimeout","audioRef","uploadAudio","event","file","target","files","objectUrl","URL","createObjectURL","current","src","play","transcribeAudio"],"sources":["/home/oyvind/Documents/amkS2T/amks2t/src/AudioUpload.tsx"],"sourcesContent":["import { Box, Button, Center, Text } from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport HuggingFaceAPI from \"./api\";\n\n\n\nconst AudioUpload = (): JSX.Element => {\n\n    const [countDown, setCountDown] = useState<number>(0);\n    const [audio, setAudio] = useState<Blob>();\n\n    useEffect(() => {\n        const initializeModel = async () => {\n            const response = await HuggingFaceAPI.initializeModel();\n            setCountDown(parseInt(response.estimated_time))\n            console.log(countDown)\n        }\n\n        void initializeModel();\n    }, [])\n\n    // Timer that counts down from countDown to 0 and updates the state every second\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (countDown > 0) {\n                setCountDown(countDown - 1);\n            }\n        }, 1000);\n        return () => clearTimeout(timer);\n    }, [countDown]);\n\n\n    // Upload audio from local file system\n    const audioRef = useRef<HTMLAudioElement>(null);\n\n\n    const uploadAudio = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (file) {\n            setAudio(file);\n            const objectUrl = URL.createObjectURL(file);\n            console.log(objectUrl);\n            if (audioRef.current) {\n                audioRef.current.src = objectUrl;\n                audioRef.current.play();\n            }\n        }\n    };\n\n    const transcribeAudio = async (file: Blob) => {\n        if (!file) {\n            return;\n        }\n        const response = await HuggingFaceAPI.transcribeAudio(file);\n        console.log(response);\n    };\n\n\n\n    return (\n        <Center>\n            {countDown === 0 ? (\n                <>\n                    <Box>\n                        <Text>Model initialized. Please upload an audio file.</Text>\n                        <input type=\"file\" onChange={uploadAudio} />\n                        <audio ref={audioRef} controls />\n                    </Box>\n                    <Box>\n                        <Button onClick={() => transcribeAudio(audio!)}>Transcribe</Button>\n                    </Box>\n                </>\n            ) : (\n                <Box>\n                    <Text>Initializing model. Please wait {countDown} seconds.</Text>\n                </Box>\n            )}\n        </Center>\n    );\n\n};\n\nexport default AudioUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}