{"ast":null,"code":"const API = {\n  transcribeAudio: async audio => {\n    const data = new FormData();\n    data.append(\"audio\", audio, \"file\");\n    try {\n      const response = await fetch(\"http://localhost:5000/pipeline/audio\", {\n        method: \"POST\",\n        body: data,\n        headers: {\n          \"Content-Type\": \"audio/wav\"\n        }\n      });\n      console.log(`Response status code: ${response.status}`);\n      if (response.status == 200) {\n        const result = await response.json();\n        console.log(`Result: ${result}`);\n        return result;\n      }\n    } catch (error) {\n      console.log(`Error: ${error}`);\n      return error;\n    }\n  }\n};\nexport default API;","map":{"version":3,"names":["API","transcribeAudio","audio","data","FormData","append","response","fetch","method","body","headers","console","log","status","result","json","error"],"sources":["/home/oyvind/Documents/amkS2T/amks2t/src/api.ts"],"sourcesContent":["const API = {\n    \n    transcribeAudio: async (audio: Blob) => {\n        const data = new FormData();\n        data.append(\"audio\", audio, \"file\");\n        try {\n            const response = await fetch(\"http://localhost:5000/pipeline/audio\",\n                {\n                    method: \"POST\",\n                    body: data,\n                    headers: {\n                        \"Content-Type\": \"audio/wav\"\n                    }\n                }\n            )\n            console.log(`Response status code: ${response.status}`)\n            if (response.status == 200) {\n                const result = await response.json();\n                console.log(`Result: ${result}`);\n                return result;\n            }\n        } catch (error) {\n            console.log(`Error: ${error}`);\n            return error;\n        }\n    },\n}\n\nexport default API;"],"mappings":"AAAA,MAAMA,GAAG,GAAG;EAERC,eAAe,EAAE,MAAOC,KAAW,IAAK;IACpC,MAAMC,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3BD,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,EAAE,MAAM,CAAC;IACnC,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAC/D;QACIC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN,IAAI;QACVO,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CACJ;MACDC,OAAO,CAACC,GAAG,CAAE,yBAAwBN,QAAQ,CAACO,MAAO,EAAC,CAAC;MACvD,IAAIP,QAAQ,CAACO,MAAM,IAAI,GAAG,EAAE;QACxB,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;QACpCJ,OAAO,CAACC,GAAG,CAAE,WAAUE,MAAO,EAAC,CAAC;QAChC,OAAOA,MAAM;MACjB;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZL,OAAO,CAACC,GAAG,CAAE,UAASI,KAAM,EAAC,CAAC;MAC9B,OAAOA,KAAK;IAChB;EACJ;AACJ,CAAC;AAED,eAAehB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}