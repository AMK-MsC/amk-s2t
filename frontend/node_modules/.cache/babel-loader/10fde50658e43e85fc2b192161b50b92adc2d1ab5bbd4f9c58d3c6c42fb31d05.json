{"ast":null,"code":"const HuggingFaceAPI = {\n  initializeModel: async () => {\n    console.log(\"start model\");\n    try {\n      const response = await fetch(\"https://api-inference.huggingface.co/models/openai/whisper-large-v2\", {\n        headers: {\n          Authorization: `Bearer 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`\n        },\n        method: \"POST\",\n        body: \"start\"\n      });\n      console.log(`Response status code: ${response.status}`);\n      if (response.status == 503) {\n        const result = await response.json();\n        console.log(`Result: ${result.estimated_time}`);\n        return result;\n      }\n    } catch (error) {\n      console.log(`Error: ${error}`);\n    }\n  },\n  transcribeAudio: async audio => {\n    console.log(\"audio inference\");\n    try {\n      const response = await fetch(\"https://api-inference.huggingface.co/models/openai/whisper-large-v2\", {\n        headers: {\n          Authorization: `Bearer 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`\n        },\n        method: \"POST\",\n        body: audio\n      });\n      console.log(`Response status code: ${response.status}`);\n      if (response.status == 200) {\n        const result = await response.json();\n        console.log(`Result: ${result.transcript}`);\n        return result;\n      }\n    } catch (error) {\n      console.log(`Error: ${error}`);\n      return error;\n    }\n  }\n};\nexport default HuggingFaceAPI;","map":{"version":3,"names":["HuggingFaceAPI","initializeModel","console","log","response","fetch","headers","Authorization","method","body","status","result","json","estimated_time","error","transcribeAudio","audio","transcript"],"sources":["/home/oyvind/Documents/amkS2T/amks2t/src/api.ts"],"sourcesContent":["const HuggingFaceAPI = {\n    initializeModel: async () => {\n        console.log(\"start model\")\n        try {\n            const response = await fetch(\"https://api-inference.huggingface.co/models/openai/whisper-large-v2\",\n                {\n                    headers: { Authorization: `Bearer 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` },\n                    method: \"POST\",\n                    body: \"start\",\n                }\n            )\n            console.log(`Response status code: ${response.status}`)\n            if (response.status == 503) {\n                const result = await response.json();\n                console.log(`Result: ${result.estimated_time}`);\n                return result;\n            }\n        }\n        catch (error) {\n            console.log(`Error: ${error}`);\n        }\n    },\n\n    transcribeAudio: async (audio: Blob) => {\n        console.log(\"audio inference\")\n        try {\n            const response = await fetch(\"https://api-inference.huggingface.co/models/openai/whisper-large-v2\",\n                {\n                    headers: { Authorization: `Bearer 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` },\n                    method: \"POST\",\n                    body: audio,\n                }\n            )\n            console.log(`Response status code: ${response.status}`)\n            if (response.status == 200) {\n                const result = await response.json();\n                console.log(`Result: ${result.transcript}`);\n                return result;\n            }\n        } catch (error) {\n            console.log(`Error: ${error}`);\n            return error;\n        }\n    }\n}\n\nexport default HuggingFaceAPI;"],"mappings":"AAAA,MAAMA,cAAc,GAAG;EACnBC,eAAe,EAAE,YAAY;IACzBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qEAAqE,EAC9F;QACIC,OAAO,EAAE;UAAEC,aAAa,EAAG;QAA8C,CAAC;QAC1EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;MACV,CAAC,CACJ;MACDP,OAAO,CAACC,GAAG,CAAE,yBAAwBC,QAAQ,CAACM,MAAO,EAAC,CAAC;MACvD,IAAIN,QAAQ,CAACM,MAAM,IAAI,GAAG,EAAE;QACxB,MAAMC,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;QACpCV,OAAO,CAACC,GAAG,CAAE,WAAUQ,MAAM,CAACE,cAAe,EAAC,CAAC;QAC/C,OAAOF,MAAM;MACjB;IACJ,CAAC,CACD,OAAOG,KAAK,EAAE;MACVZ,OAAO,CAACC,GAAG,CAAE,UAASW,KAAM,EAAC,CAAC;IAClC;EACJ,CAAC;EAEDC,eAAe,EAAE,MAAOC,KAAW,IAAK;IACpCd,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qEAAqE,EAC9F;QACIC,OAAO,EAAE;UAAEC,aAAa,EAAG;QAA8C,CAAC;QAC1EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEO;MACV,CAAC,CACJ;MACDd,OAAO,CAACC,GAAG,CAAE,yBAAwBC,QAAQ,CAACM,MAAO,EAAC,CAAC;MACvD,IAAIN,QAAQ,CAACM,MAAM,IAAI,GAAG,EAAE;QACxB,MAAMC,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;QACpCV,OAAO,CAACC,GAAG,CAAE,WAAUQ,MAAM,CAACM,UAAW,EAAC,CAAC;QAC3C,OAAON,MAAM;MACjB;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZZ,OAAO,CAACC,GAAG,CAAE,UAASW,KAAM,EAAC,CAAC;MAC9B,OAAOA,KAAK;IAChB;EACJ;AACJ,CAAC;AAED,eAAed,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}