{"ast":null,"code":"const API = {\n  transcribeAudio: async audio => {\n    const data = new FormData();\n    data.append(\"file\", audio, \"file\");\n    console.log(data);\n    try {\n      const response = await fetch(\"http://localhost:5000/transcribe\", {\n        method: \"POST\",\n        body: data\n      });\n      if (response.ok) {\n        const result = await response.json();\n        return result;\n      } else {\n        throw new Error(`${response.status}`);\n      }\n    } catch (error) {\n      console.log(`${error}`);\n      return null;\n    }\n  }\n};\nexport default API;","map":{"version":3,"names":["API","transcribeAudio","audio","data","FormData","append","console","log","response","fetch","method","body","ok","result","json","Error","status","error"],"sources":["/home/oyvind/Documents/amkS2T/amks2t/src/api.ts"],"sourcesContent":["const API = {\n    \n    transcribeAudio: async (audio: Blob) => {\n        const data = new FormData();\n        data.append(\"file\", audio, \"file\");\n        console.log(data)\n        try {\n            const response = await fetch(\"http://localhost:5000/transcribe\",\n                {\n                    method: \"POST\",\n                    body: data,\n                }\n            )\n            if (response.ok) {\n                const result = await response.json();\n                return result;\n            } else {\n                throw new Error(`${response.status}`);\n            }\n        } catch (error) {\n            console.log(`${error}`);\n            return null;\n        }\n    },\n}\n\nexport default API;"],"mappings":"AAAA,MAAMA,GAAG,GAAG;EAERC,eAAe,EAAE,MAAOC,KAAW,IAAK;IACpC,MAAMC,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEH,KAAK,EAAE,MAAM,CAAC;IAClCI,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAC3D;QACIC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACV,CAAC,CACJ;MACD,IAAIK,QAAQ,CAACI,EAAE,EAAE;QACb,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;QACpC,OAAOD,MAAM;MACjB,CAAC,MAAM;QACH,MAAM,IAAIE,KAAK,CAAE,GAAEP,QAAQ,CAACQ,MAAO,EAAC,CAAC;MACzC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZX,OAAO,CAACC,GAAG,CAAE,GAAEU,KAAM,EAAC,CAAC;MACvB,OAAO,IAAI;IACf;EACJ;AACJ,CAAC;AAED,eAAejB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}